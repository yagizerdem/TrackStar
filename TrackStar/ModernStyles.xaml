<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="BtnBase" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#FF6C757D"/>
        <Setter Property="BorderBrush" Value="#FF5A6268"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- soft shadow -->
                        <Border Margin="0,2,0,0" CornerRadius="2"
                                Background="Transparent">
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource BtnShadowColor}"
                                                  ShadowDepth="0" BlurRadius="8" Opacity="1"/>
                            </Border.Effect>
                        </Border>

                        <!-- focus ring -->
                        <Border x:Name="FocusRing"
                                CornerRadius="2" BorderThickness="2"
                                BorderBrush="{StaticResource BtnFocusRing}"
                                Opacity="0"/>

                        <!-- main -->
                        <Border x:Name="Root"
                                CornerRadius="12"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="6,2"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.55"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusRing" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="FocusRing" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===== Variants with State Triggers ===== -->

    <!-- Danger -->
    <Style x:Key="BtnDanger" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="{StaticResource BtnDangerBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BtnDangerBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource BtnDangerForeground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnDangerBgHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnDangerBgPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Warning -->
    <Style x:Key="BtnWarning" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="{StaticResource BtnWarningBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BtnWarningBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource BtnWarningForeground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnWarningBgHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnWarningBgPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Info -->
    <Style x:Key="BtnInfo" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="{StaticResource BtnInfoBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BtnInfoBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource BtnInfoForeground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnInfoBgHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnInfoBgPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Success -->
    <Style x:Key="BtnSuccess" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="{StaticResource BtnSuccessBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BtnSuccessBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource BtnSuccessForeground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnSuccessBgHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BtnSuccessBgPressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--transparent button with glow effect-->
    <Style x:Key="BtnGhost" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource GhostBtnForeground}"/>
        <Setter Property="Background" Value="{StaticResource GhostBtnTransparent}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GhostBtnBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Focus ring -->
                        <Border x:Name="FocusRing"
                                CornerRadius="2"
                                BorderThickness="2"
                                BorderBrush="{StaticResource GhostBtnFocusRingBrush}"
                                Opacity="0"
                                IsHitTestVisible="False"/>

                        <!-- Hover glow layer -->
                        <Border x:Name="GlowHost"
                                CornerRadius="2"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Effect>
                                <DropShadowEffect x:Name="Glow"
                                                  Color="{StaticResource GhostBtnGlowColor}"
                                                  BlurRadius="0"
                                                  ShadowDepth="0"
                                                  Opacity="0"/>
                            </Border.Effect>
                        </Border>

                        <!-- Main face -->
                        <Border x:Name="Face"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="PressScale" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>

                            <ContentPresenter Margin="4,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>

                    <!-- ==== Visual States ==== -->
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Face" Property="Background"
                                    Value="{StaticResource GhostBtnHoverBgBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Glow"
                                                         Storyboard.TargetProperty="BlurRadius"
                                                         To="16" Duration="0:0:0.18"/>
                                        <DoubleAnimation Storyboard.TargetName="Glow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.85" Duration="0:0:0.18"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Glow"
                                                         Storyboard.TargetProperty="BlurRadius"
                                                         To="0" Duration="0:0:0.18"/>
                                        <DoubleAnimation Storyboard.TargetName="Glow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.18"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                        <!-- Focus -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusRing" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="FocusRing" Property="Opacity" Value="1"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource GhostBtnDisabledFgBrush}"/>
                            <Setter TargetName="Face" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="GlowHost" Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Movie Item Style -->
    <Style x:Key="MovieItemStyle" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#E0E0E0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="320"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Gray" Direction="315" ShadowDepth="2" BlurRadius="5" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Gray" Direction="315" ShadowDepth="4" BlurRadius="8" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="#007ACC"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Poster Image Style -->
    <Style x:Key="PosterImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="UniformToFill"/>
        <Setter Property="Width" Value="190"/>
        <Setter Property="Height" Value="240"/>
        <Setter Property="Margin" Value="5,5,5,0"/>

    </Style>

    <!-- Title Style -->
    <Style x:Key="TitleStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="MaxHeight" Value="32"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>

    <!-- Year and Type Style -->
    <Style x:Key="SubtitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Foreground" Value="#666666"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
    </Style>

    <!-- Bootstrap-like TextBox Style -->
    <Style x:Key="BootstrapTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#ced4da"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0"
                                      Focusable="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#86b7fe"/>
                        </Trigger>
                        <!-- Focus -->
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="#0d6efd"/>
                            <Setter Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#e9ecef"/>
                            <Setter Property="Foreground" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--check box-->
    <Style x:Key="ModernCheckBox1" TargetType="CheckBox">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource MulledWine400}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="border"
                    Width="{TemplateBinding Width}" 
                    Height="{TemplateBinding Height}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="3">
                        <Grid VerticalAlignment="Center"
                          HorizontalAlignment="Center">
                            <!-- Check mark -->
                            <Path x:Name="checkMark"
                          Data="M0,5 L5,10 L15,0"
                          Stroke="{StaticResource MulledWine50}"
                          StrokeThickness="3"
                          Visibility="Collapsed"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Show check mark when checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource MulledWine600}"/>
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MulledWine700}"/>
                        </Trigger>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Mortar400}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="SliderTrackBg" Color="#1A000000"/>
    <SolidColorBrush x:Key="SliderTrackFill" Color="#6A5ACD"/>
    <SolidColorBrush x:Key="SliderThumbFill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SliderThumbStroke" Color="#22000000"/>
    <DropShadowEffect x:Key="ThumbShadow" BlurRadius="10" ShadowDepth="0" Opacity="0.25"/>

    <Style x:Key="SliderTrackDecreaseButtonStyle" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{DynamicResource SliderTrackFill}" CornerRadius="999" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="1"/>
    </Style>

    <Style x:Key="SliderTrackIncreaseButtonStyle" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{DynamicResource SliderTrackBg}" CornerRadius="999" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="1"/>
    </Style>

    <!-- Thumb -->
    <Style x:Key="ModernSliderThumb" TargetType="Thumb">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Ellipse Fill="{DynamicResource SliderThumbFill}"
                                 Stroke="{DynamicResource SliderThumbStroke}"
                                 StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect" Value="{StaticResource ThumbShadow}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- MODERN SLIDER -->
    <Style x:Key="ModernSlider" TargetType="Slider">
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="IsSnapToTickEnabled" Value="False"/>
        <Setter Property="TickPlacement" Value="None"/>
        <Setter Property="SmallChange" Value="0.1"/>
        <Setter Property="LargeChange" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid x:Name="Root" SnapsToDevicePixels="True" Margin="6,8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid x:Name="HorizontalTemplate" Height="6" VerticalAlignment="Center">
                            <Track x:Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderTrackDecreaseButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderTrackIncreaseButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ModernSliderThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>

                        <Grid x:Name="VerticalTemplate" Width="6" Visibility="Collapsed">
                            <Track x:Name="PART_VerticalTrack" IsDirectionReversed="True" Orientation="Vertical">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderTrackDecreaseButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderTrackIncreaseButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ModernSliderThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTemplate"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTemplate"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTemplate"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTemplate"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="HorizontalTemplate" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="VerticalTemplate" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ModernComboBox-->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#2C2C2C"/>
        <Setter Property="BorderBrush" Value="#444"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"/>
                        <ToggleButton x:Name="ToggleButton"
                                  Grid.Column="2"
                                  Focusable="False"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  Background="Transparent"
                                  BorderThickness="0">
                            <Path x:Name="Arrow"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="White"
                              Width="8"
                              Height="5"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite"
                                      Margin="6,0,25,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="#2C2C2C"
                                    BorderBrush="#444"
                                    BorderThickness="1"
                                    CornerRadius="6"/>
                                <ScrollViewer Margin="4,2" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#666"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ModernComboBox_CustomSelected-->
    <Style x:Key="ModernComboBox_CustomSelected" TargetType="ComboBox" BasedOn="{StaticResource ModernComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton to handle opening -->
                        <ToggleButton x:Name="ToggleButton"
                              Focusable="False"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Height="{TemplateBinding Height}"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Center"
                              Padding="{TemplateBinding Padding}">
                            <Grid>
                                <!-- Custom selected item -->
                                <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectedItem}"
                                          Margin="6,0,25,0"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True">
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"
                                               FontWeight="Bold"
                                               Foreground="#9B59B6"/>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>

                                <!-- Dropdown arrow -->
                                <Path x:Name="Arrow"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="White"
                              Width="10" 
                              Height="6"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Margin="0,0,10,0"
                              RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </ToggleButton>

                        <!-- Popup -->
                        <Popup x:Name="PART_Popup"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       Focusable="False"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       PopupAnimation="Slide">
                            <Border Background="#2C2C2C"
                            BorderBrush="#444"
                            BorderThickness="1"
                            CornerRadius="6"
                            SnapsToDevicePixels="True">
                                <ScrollViewer Margin="4,2">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <!-- Triggers - Removed the IsMouseOver trigger -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BtnToggleSuccess" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#198754"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="BorderBrush" Value="#198754"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                        CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#157347"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#146c43"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#146c43"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#0f5132"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#0f5132"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#0f5132"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#adb5bd"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#adb5bd"/>
                            <Setter Property="Foreground" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BtnTogglePrimary" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#0d6efd"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="BorderBrush" Value="#0d6efd"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                        CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#0b5ed7"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#0a58ca"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#0a58ca"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#084298"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#084298"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#084298"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#adb5bd"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#adb5bd"/>
                            <Setter Property="Foreground" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnToggleDanger" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#DC3545"/>
        <!-- Base red -->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="BorderBrush" Value="#DC3545"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                        CornerRadius="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#BB2D3B"/>
                            <!-- Darker red -->
                            <Setter Property="BorderBrush" TargetName="border" Value="#B02A37"/>
                        </Trigger>
                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#B02A37"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#842029"/>
                        </Trigger>
                        <!-- Checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#842029"/>
                            <!-- Deep red -->
                            <Setter Property="BorderBrush" TargetName="border" Value="#842029"/>
                        </Trigger>
                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#E9ECEF"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#E9ECEF"/>
                            <Setter Property="Foreground" Value="#6c757d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Custom ScrollViewer Style (Uses your existing Slider resources) -->
    <Style x:Key="ModernScrollViewerVertical" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Content -->
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                        <!-- Vertical ScrollBar (Uses your ModernSlider thumb/track styles) -->
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="1"
                               Grid.Row="0"
                               Orientation="Vertical"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               Value="{TemplateBinding VerticalOffset}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <ScrollBar.Style>
                                <Style TargetType="ScrollBar">
                                    <Setter Property="Width" Value="8"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ScrollBar">
                                                <Grid Background="Transparent" SnapsToDevicePixels="True">
                                                    <Track x:Name="PART_Track" IsDirectionReversed="True">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Style="{StaticResource SliderTrackDecreaseButtonStyle}"/>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Style="{StaticResource SliderTrackIncreaseButtonStyle}"/>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb Style="{StaticResource ModernSliderThumb}"/>
                                                        </Track.Thumb>
                                                    </Track>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollBar.Style>
                        </ScrollBar>

             
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                               Grid.Column="0"
                               Grid.Row="1"
                               Orientation="Horizontal"
                               ViewportSize="{TemplateBinding ViewportWidth}"
                               Maximum="{TemplateBinding ScrollableWidth}"
                               Value="{TemplateBinding HorizontalOffset}"
                               Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>